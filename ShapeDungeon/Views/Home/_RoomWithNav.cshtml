@using ShapeDungeon.DTOs.Rooms
@using ShapeDungeon.Helpers.Enums
@using ShapeDungeon.Entities.Enums
@model RoomDto

<link rel="stylesheet" href="~/css/buttons-active.css" />
<td class="align-middle position-relative" style="width:50vw">
    <div id="room"
         class="position-absolute top-50 start-50 translate-middle"
         style="height:50vh;width:50vh;border:solid 1rem white">

        <div id="move-up"
             class="position-absolute"
             style="width:100%;">
            @if (Model.HasUpNeighbor)
            {
                @if (Model.IsActiveForMove)
                {
                    <a 
                        type="button"
                        class="btn btn-outline-dark fixed-dir-btn up-dir-btn-move"
                        asp-controller="Home"
                        asp-action="Move"
                        asp-route-direction="@RoomDirection.Top">
                        Move
                    </a>
                }

                @if (Model.IsActiveForScout)
                {
                    <a 
                        type="button"
                        class="btn btn-outline-info fixed-dir-btn up-dir-btn-scout"
                        asp-controller="Home"
                        asp-action="Scout"
                        asp-route-direction="@RoomDirection.Top">
                        Scout
                    </a> 
                }
                
            }
            else if (Model.CanGoUp)
            {
                <button type="button" class="btn btn-outline-danger fixed-dir-btn" disabled>Void!</button>
            }
        </div>

        <div id="move-down"
             class="position-absolute"
             style="width:100%;height:100%;">
            @if (Model.HasDownNeighbor)
            {
                @if (Model.IsActiveForMove)
                {
                    <a 
                        type="button"
                        class="btn btn-outline-dark fixed-dir-btn down-dir-btn move"
                        asp-controller="Home"
                        asp-action="Move"
                        asp-route-direction="@RoomDirection.Bottom">
                        Move
                    </a>
                }

                @if (Model.IsActiveForScout)
                {
                    <a 
                        type="button"
                        class="btn btn-outline-info fixed-dir-btn down-dir-btn scout"
                        asp-controller="Home"
                        asp-action="Scout"
                        asp-route-direction="@RoomDirection.Bottom">
                        Scout
                    </a> 
                }
            }
            else if (Model.CanGoDown)
            {
                <button type="button" class="btn btn-outline-danger" disabled>Void!</button>
            }
        </div>

        <div id="move-left"
             class="position-absolute"
             style="width:100%;height:100%;">
            @if (Model.HasLeftNeighbor)
            {
                @if (Model.IsActiveForMove)
                {
                    <a 
                        type="button"
                        class="btn btn-outline-dark fixed-dir-btn left-dir-btn move"
                        asp-controller="Home"
                        asp-action="Move"
                        asp-route-direction="@RoomDirection.Left">
                        Move
                    </a>
                }

                @if (Model.IsActiveForScout)
                {
                    <a 
                        type="button"
                        class="btn btn-outline-info fixed-dir-btn left-dir-btn scout"
                        asp-controller="Home"
                        asp-action="Scout"
                        asp-route-direction="@RoomDirection.Left">
                        Scout
                    </a> 
                }
            }
            else if (Model.CanGoLeft)
            {
                <button type="button" class="btn btn-outline-danger" disabled>Void!</button>
            }
        </div>

        <div id="move-right"
             class="position-absolute"
             style="width:100%;height:100%;">
            @if (Model.HasRightNeighbor)
            {
                @if (Model.IsActiveForMove)
                {
                    <a 
                        type="button"
                        class="btn btn-outline-dark fixed-dir-btn right-dir-btn move"
                        asp-controller="Home"
                        asp-action="Move"
                        asp-route-direction="@RoomDirection.Right">
                        Move
                    </a>
                }

                @if (Model.IsActiveForScout)
                {
                    <a 
                        type="button"
                        class="btn btn-outline-info fixed-dir-btn right-dir-btn scout"
                        asp-controller="Home"
                        asp-action="Scout"
                        asp-route-direction="@RoomDirection.Right">
                        Scout
                    </a> 
                }
            }
            else if (Model.CanGoRight)
            {
                <button type="button" class="btn btn-outline-danger" disabled>Void!</button>
            }
        </div>

        @if (Model.IsEnemyRoom && Model.Enemy != null)
        {
            <p id="enemy-level"
               style="top:20%;color:lightcoral"
               class="position-absolute start-50 translate-middle">
               Lvl.<span id="enemy-level-number">@Model.Enemy.Level</span>
            </p>

            @if (Model.Enemy.Shape == Shape.Square)
            {
                <div id="enemy-shape"
                     style="height:10rem;width:10rem;background-color:red"
                     class="position-absolute top-50 start-50 translate-middle">
                </div>
            }
            else if (Model.Enemy.Shape == Shape.Triangle)
            {
                <div id="enemy-shape"
                     style="width:0;height:0;border-top: 5rem solid transparent;border-left: 10rem solid red;border-bottom: 5rem solid transparent"
                     class="position-absolute top-50 start-50 translate-middle">
                </div>
            }
            else if (Model.Enemy.Shape == Shape.Circle)
            {
                <div id="enemy-shape"
                     style="height:10rem;width:10rem;background-color:red;border-radius:50%"
                     class="position-absolute top-50 start-50 translate-middle">
                </div>
            }
        }

    </div>
</td>